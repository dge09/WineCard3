// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WineCard3.MyDB;

#nullable disable

namespace WineCard3.Migrations.Data
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CardWine", b =>
                {
                    b.Property<int>("CardsID")
                        .HasColumnType("int");

                    b.Property<int>("WinesID")
                        .HasColumnType("int");

                    b.HasKey("CardsID", "WinesID");

                    b.HasIndex("WinesID");

                    b.ToTable("CardWine");
                });

            modelBuilder.Entity("WineCard3.MyDB.Enities.Card", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CardDscp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("WineCard3.MyDB.Enities.Origin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("OriginName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Origins");
                });

            modelBuilder.Entity("WineCard3.MyDB.Enities.Style", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("StyleDscp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("WineCard3.MyDB.Enities.Wine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OriginID")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("StyleID")
                        .HasColumnType("int");

                    b.Property<int>("SweetnessLevel")
                        .HasColumnType("int");

                    b.Property<string>("WineName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OriginID");

                    b.HasIndex("StyleID");

                    b.ToTable("Wines");
                });

            modelBuilder.Entity("CardWine", b =>
                {
                    b.HasOne("WineCard3.MyDB.Enities.Card", null)
                        .WithMany()
                        .HasForeignKey("CardsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WineCard3.MyDB.Enities.Wine", null)
                        .WithMany()
                        .HasForeignKey("WinesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WineCard3.MyDB.Enities.Wine", b =>
                {
                    b.HasOne("WineCard3.MyDB.Enities.Origin", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WineCard3.MyDB.Enities.Style", "Style")
                        .WithMany()
                        .HasForeignKey("StyleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Origin");

                    b.Navigation("Style");
                });
#pragma warning restore 612, 618
        }
    }
}
